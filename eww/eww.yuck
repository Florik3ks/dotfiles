(include "./modules/clock.yuck")
(include "./modules/media.yuck")
(include "./modules/workspaces.yuck")
; (include "./modules/status/battery.yuck")
; (include "./modules/status/brightness.yuck")
(include "./modules/status/cpu.yuck")
(include "./modules/status/gpu.yuck")
(include "./modules/status/memory.yuck")
; (include "./modules/status/network.yuck")
(include "./modules/status/volume.yuck")
(include "./modules/status/notifications.yuck")

(defwindow bar
  :monitor 0
  :exclusive true
  :geometry (geometry :x "0%"
    :y "5px"
    :width "100%"
    :height "30px"
  :anchor "top center")
  :stacking "fg"
  (top_bar)
)

(defwidget top_bar []
  (box
    :class "bar_main"
    :orientation "h"
    
    (left)
    (center)
    (right)
  )
)

(defwidget left []
  (box
    :orientation "h"
    :space-evenly false
    :halign "start"
    :class ""
    :spacing 8
    
    (box
      :orientation "h"
      :space-evenly false
      :halign "start"
      :class "left_modules"
      :spacing 8
      
      ;(battery)
      (workspaces)
    )
    (box
      :visible {media_status == "" ? "false" : "true"}
      :orientation "h"
      :space-evenly false
      :halign "start"
      :class "left_modules"
      :spacing 8
      
      (media)
    )
  )
)

(defvar reveal_detailed_usage false)
(defwidget right []
  (box :orientation "h"
    :space-evenly false
    :halign "end"
    :class "right_modules"
    
    (eventbox
      :onclick "${EWW_CMD} update reveal_detailed_usage=${reveal_detailed_usage ? "false" : "true"}" :cursor "pointer"
      (box :orientation "h"
        :space-evenly false
        :spacing -5
        :halign "end"
        (cpu)
        (gpu)
        (memory)
      )
    )
    (seperator)
    (volume)
    (seperator)
    ;(brightness)
    ;(seperator)
    ;(network)
    (notifications)
    (seperator)
    (systray :class "tray" :spacing "8" :icon-size "20")
  )
)


(defwidget center []
  (box
    :orientation "h"
    :space-evenly false
    :halign "center"
    :class "center_modules"
    
    (clock)
  )
)

(defwidget seperator []
  (label :text "|" :class "seperator")
)

; https://github.com/elkowar/eww/issues/472#issuecomment-1146860335
(defwidget closer [window]
  (eventbox :onclick "eww close ${window} && eww close ${window}-closer")
)